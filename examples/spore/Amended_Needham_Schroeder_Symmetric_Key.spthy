theory AmendedNS
begin

section{* The Amended Needham Schroeder Symmetric Key Protocol *}

text{*
  Modelled according to the desciprtion in the SPORE library:

    http://www.lsv.ens-cachan.fr/Software/spore/nssk_amended.html

  Notable differences:

    1. Instead of assuming a typed model we are using global constants to
       ensure distinctness of messages from different steps.

    2. We use the weaker authentication property of non-injective agreement
       instead of injective agreement because the later cannot yet be proven
       automatically. However, based on the resulting Isabelle file it would be
       easy to also derive injective agreement from the proven non-injective
       variants.

    3. We model the invertible function 'dec(x)' as tupling with a fixed public
       constant 'dec'; i.e., we only exploit 'dec's tagging capabilities.

    TODO: Check that this protocol can also be verified with bidirectional
    shared keys.
*}

protocol AmendedNS
{
   1. I -> R: I

   2.   <- R: {'1', I, nr}k(R,S)
      I <-  : RequestR

   3. I ->  : I, R, ni, RequestR
        -> S: I, R, ni, {'1', I, nr}k(R,S)

   4.   <- S: S, {'2', ni, R, kIR, {'3', kIR, nr, I}k(R,S)}k(I,S)
      I <-  : S, {'2', ni, R, kIR, TicketR                }k(I,S)

   5. I ->  : TicketR
        -> R: {'3', kIR, nr, I}k(R,S)

   6. I <- R: {'4', nr}kIR

   7. I -> R: {'5', ('dec', nr)}kIR
}


subsection{* Security Properties *}

property (of AmendedNS) AmendedNS_msc_typing:
  "I@R        :: Known(R_1)
   I@S        :: Known(S_3)
   R@S        :: Known(S_3)
   RequestR@I :: Known(I_2)
   S@I        :: Known(I_4)
   kIR@I      :: Known(I_4) | kIR@S
   kIR@R      :: Known(R_5) | kIR@S
   ni@S       :: Known(S_3)
   nr@I       :: Known(I_6) | nr@R
   nr@S       :: Known(S_3) | nr@R
   TicketR@I  :: 
     Known(I_4) | {'3' , kIR@S, (nr@R | Known(I_4)), Agent}k(Agent, Agent)
 "

properties (of AmendedNS)
  S_kir_sec: secret(S, -, kIR, {I,R,S})
  I_kir_sec: secret(I, 4, kIR, {I,R,S})
  R_kir_sec: secret(R, 5, kIR, {I,R,S})

property (of AmendedNS) I_ni_agree:
  premises
    "role(1) = I"
    "step(1, I_6)"
    "uncompromised(I#1, R#1, S#1)"
  imply threads 2 ,3 such that
    "  role(2) = R
     & role(3) = S
     & I#1  = I#2     & I#2  = I#3
     & R#1  = R#2     & R#2  = R#3
     & S#1  = S#2     & S#2  = S#3
                      & ni#1 = ni#3    // the responder never receives ni
     & nr#1 = nr#2    & nr#2 = nr#3  
     & kIR#1 = kIR#2  & kIR#2 = kIR#3
   "

property (of AmendedNS) R_ni_agree:
  premises
    "role(2) = R"
    "step(2, R_7)"
    "uncompromised(I#2, R#2, S#2)"
  imply threads 1 ,3 such that
    "  role(1) = I
     & role(3) = S
     & I#1  = I#2     & I#2  = I#3
     & R#1  = R#2     & R#2  = R#3
     & S#1  = S#2     & S#2  = S#3
                      & ni#1 = ni#3    // the responder never receives ni
     & nr#1 = nr#2    & nr#2 = nr#3  
     & kIR#1 = kIR#2  & kIR#2 = kIR#3
   "


end


