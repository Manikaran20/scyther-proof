theory SimpleCommit
begin

section{* Simple commitment scheme *}

text{*
  In this protocol, agent C commits itself to a data value c, which we model as
  a nonce. The predefined public-key infrastructure is used to identify C.
  The verification process is public, no information is private to the verifier V.
  This allows us to express the hiding property relative to the adversary,
  because they could fully impersonate V.
*}

protocol SimpleCommit
{
  1. V -> C : n
  2. C ->   : {{C, h(n, k), c}sk(C)}k
       -> V : t
  (* C decides to open the commitment *)
  3. C -> V : k
  4. V      : t -> {{C, h(n, k), c}sk(C)}k
}

property (of SimpleCommit) hiding:
  premises
    "role(1) = C"
    "knows(c#1)"
  imply
    "step(1, C_3)"

property (of SimpleCommit) binding:
  premises
    "role(0) = V"
    "step(0, V_4)"
    "uncompromised(C#0)"
  injectively imply threads 1 such that
    "role(1) = C &
	C#0 = C#1 &

    n#0 = n#1 &
    k#0 = k#1 &
    c#0 = c#1 &

    St(0, V_1) < St(1, C_2) < St(1, C_3) < St(0, V_4)
    "

end
